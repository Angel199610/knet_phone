"""initialization

Revision ID: c7684bd8a956
Revises: 
Create Date: 2024-12-23 11:03:06.885342

"""
from alembic import op
import sqlalchemy as sa


# Revision identifiers, used by Alembic.
revision = 'c7684bd8a956'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password', sa.String(length=128), nullable=False),
        sa.Column('address', sa.String(length=200), nullable=False),
        sa.Column('phone_number', sa.String(length=20), nullable=False),
        sa.Column('role', sa.String(length=20), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email')
    )
    op.create_table(
        'products',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('image', sa.String(length=500), nullable=False),
        sa.Column('description', sa.String(length=250), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('price', sa.Float(), nullable=False),
        sa.Column('stock', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'orders',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('product_id', sa.Integer(), nullable=False),
        sa.Column('quantity', sa.Integer(), nullable=False),
        sa.Column('total_price', sa.Float(), nullable=False),
        sa.Column('status', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('updated_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['product_id'], ['products.id']),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'admin',
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('username', sa.String(length=50), nullable=False, unique=True),
        sa.Column('password', sa.String(length=200), nullable=False)
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('admin')
    op.drop_table('orders')
    op.drop_table('products')
    op.drop_table('users')
    # ### end Alembic commands ###















# """initialization

# Revision ID: c7684bd8a956
# Revises: 
# Create Date: 2024-12-23 11:03:06.885342

# """
# from alembic import op
# import sqlalchemy as sa


# # revision identifiers, used by Alembic.
# revision = 'c7684bd8a956'
# down_revision = None
# branch_labels = None
# depends_on = None


# def upgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_table('users',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('name', sa.String(length=100), nullable=False),
#     sa.Column('email', sa.String(length=120), nullable=False),
#     sa.Column('password', sa.String(length=128), nullable=False),
#     sa.Column('address', sa.String(length=200), nullable=False),
#     sa.Column('phone_number', sa.String(length=20), nullable=False),
#     sa.Column('role', sa.String(length=20), nullable=True),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('updated_at', sa.DateTime(), nullable=True),
#     sa.PrimaryKeyConstraint('id'),
#     sa.UniqueConstraint('email')
#     )
#     op.create_table('products',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('image', sa.String(length=500), nullable=False),
#     sa.Column('description', sa.String(length=250), nullable=False),
#     sa.Column('name', sa.String(length=100), nullable=False),
#     sa.Column('price', sa.Float(), nullable=False),
#     sa.Column('stock', sa.Integer(), nullable=False),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('updated_at', sa.DateTime(), nullable=True),
#     sa.Column('user_id', sa.Integer(), nullable=False),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     op.create_table('orders',
#     sa.Column('id', sa.Integer(), nullable=False),
#     sa.Column('user_id', sa.Integer(), nullable=False),
#     sa.Column('product_id', sa.Integer(), nullable=False),
#     sa.Column('quantity', sa.Integer(), nullable=False),
#     sa.Column('total_price', sa.Float(), nullable=False),
#     sa.Column('status', sa.String(length=255), nullable=True),
#     sa.Column('created_at', sa.DateTime(), nullable=True),
#     sa.Column('updated_at', sa.DateTime(), nullable=True),
#     sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
#     sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
#     sa.PrimaryKeyConstraint('id')
#     )
#     # ### end Alembic commands ###


# def downgrade():
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_table('orders')
#     op.drop_table('products')
#     op.drop_table('users')
#     # ### end Alembic commands ###

# from alembic import op
# import sqlalchemy as sa

# # Revision identifiers, used by Alembic.
# revision = 'your_revision_id'
# down_revision = 'previous_revision_id'
# branch_labels = None
# depends_on = None

# def upgrade():
#     op.create_table(
#         'admin',
#         sa.Column('id', sa.Integer, primary_key=True),
#         sa.Column('username', sa.String(length=50), nullable=False, unique=True),
#         sa.Column('password', sa.String(length=200), nullable=False)
#     )

# def downgrade():
#     op.drop_table('admin')
